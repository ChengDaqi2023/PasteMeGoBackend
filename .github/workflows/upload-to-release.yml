name: Go Release

on:
  release:
    types: [published]

jobs:

  release:
    if: github.repository == 'PasteUs/PasteMeGoBackend'
    name: Build with go ${{ matrix.go_version }} on ${{ matrix.os }} and upload
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        go_version: [1.15]
        os: [ubuntu-latest]

    steps:

      - name: Set up Go ${{ matrix.go_version }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go_version }}
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Build
        run: |
          GOARCH=amd64 GOOS=linux go build -v -o pastemed .

      - name: Gzip
        run: |
          mkdir pastemed-linux-amd64
          cp pastemed pastemed-linux-amd64
          cp config.example.json pastemed-linux-amd64
          cp -r systemd pastemed-linux-amd64
          tar -czvf pastemed-linux-amd64.tar.gz pastemed-linux-amd64

      - name: Upload to release
        uses: JasonEtco/upload-to-release@master
        with:
          args: pastemed-linux-amd64.tar.gz application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_PASSWORD }}

      - name: Publish Docker
        uses: LucienShui/Publish-Docker-Github-Action@2.7.1
        with:
          name: registry.cn-hangzhou.aliyuncs.com/pasteus/pasteme-go-backend
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: registry.cn-hangzhou.aliyuncs.com
          dockerfile: Dockerfile
          tag_names: true
